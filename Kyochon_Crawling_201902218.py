# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nKbzdQna9LByLCu_MHrnOOarVyry_Ibt

## 필요한 라이브러리 import
"""

import urllib.request
from bs4 import BeautifulSoup
import time
from itertools import count
import pandas as pd

"""## 크롤링 코드"""

result = [] # 작업 결과를 저장할 리스트 준비

for sido1 in range(1, 18): #시/도: 서울~제주, 총 17개를 도는 반복문
  for sido2 in count(start=1): # 각 시/도마다 다른 구/군 개수! 직접 카운트

    try: # 오류 발생시 처리를 위한 try 블록
      Kyochon_url = 'http://www.kyochon.com/shop/domestic.asp?txtsearch=&sido1=%s&sido2=%s' % (sido1, sido2)
      print(Kyochon_url)
      html = urllib.request.urlopen(Kyochon_url) # url에 대한 http 요청, 결과 가져오기
      soupKyochon = BeautifulSoup(html, 'html.parser') # beutifulsoup 객체 생성
      tag_ul = soupKyochon.find('div', {'class': 'shopSchList'}) 
      time.sleep(0.4) # 웹사이트의 request에 대한 부담 줄이기

      if soupKyochon is None: #가져온 html이 비어있다면 다음 시/도로 넘어감 
        break    
      if tag_ul is None: #  'shopSchList' 클래스를 가진 div가 없는 경우 다음 구/군으로 넘어감
        continue

      for store in tag_ul.find_all('a'): # 'a'태그 찾기
        store_strong = store.find('strong') # 'em'태그 찾기
        store_em = store.find('em') # 'em'태그의 텍스트 가져오기
        store_address_number = store_em.get_text() # 'strong'태그의 텍스트 가져오기

        store_name = store_strong.get_text() # 매장 이름
        store_address = store_address_number.strip().split('\r')[0] # 주소와 번호 분리하여 주소만 찾기
        first_space = store_address.find(' ') 
        store_sido = store_address[:first_space] # 주소에서 띄어쓰기를 활용 첫번째 띄어쓰기 전까지를 시/도로 설정
        store_gungu = store_address[first_space + 1:store_address.find(' ', first_space + 1)] # 주소에서 첫번째와 두번째 띄어쓰기 사이를 구/군으로 설정
        result.append([store_name] + [store_address] + [store_sido] + [store_gungu]) # 결과 append 하기

    except Exception as err:
      print('error : ', err)
      break

len(result) # result 개수 확인

"""### 데이터 프레임으로 저장"""

Kyochon_store = pd.DataFrame(result, columns = ('store', 'sido', 'gungu', 'address'))

"""### csv 파일로 내보내기"""

Kyochon_store.to_csv("./Kyochon_crawling_shOh1.csv", encoding = "cp949", mode = "w", index = True)